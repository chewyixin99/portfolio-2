import type { NextApiRequest, NextApiResponse } from "next";
import { mailOptions, transporter } from "../config/nodemailer";

type ResponseData = {
  message: string;
};

const handler = async (
  req: NextApiRequest,
  res: NextApiResponse<ResponseData>
) => {
  // 405 if not POST
  if (req.method !== "POST") {
    return res.status(405).json({ message: "Method not allowed" });
  }

  // 400 if bad data / request
  const { name, email, subject, message } = req.body;
  if (!name || !email || !subject || !message) {
    return res.status(400).json({ message: "Bad request" });
  }

  // send mail
  try {
    await transporter.sendMail({
      ...mailOptions,
      subject: "From portfolio website",
      html: `
        <p><strong>Name: </strong>${name}</p>
        <p><strong>Email contact: </strong>${email}</p>        
        <p><strong>Subject: </strong>${subject}</p>        
        <p><strong>Message: </strong>${message}</p>
        <hr />
        <p><em>This email is generated by a user visiting the portfolio website</em></p>
      `,
    });
    // request success
    return res.status(200).json({ message: "Email sent successfully." });
  } catch (err: unknown) {
    // catch error
    console.log(err);
    return res
      .status(500)
      .json({ message: "Internal server error. Something went wrong" });
  }
};

export default handler;
